{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAII,EAJE,EAAc,SAAS,aAAa,CAAC,SACrC,EAAU,EAAY,gBAAgB,CAAC,MACvC,EAAY,SAAS,aAAa,CAAC,SAGrC,EAAU,CAAA,EAEd,SAAS,EAAU,CAAG,EACpB,OAAO,OAAO,EAAI,OAAO,CAAC,MAAO,IACnC,CAkIA,SAAS,EAAiB,CAAK,CAAE,CAAO,CAAE,CAAI,EAC5C,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAG,gBAAqB,MAAA,CAAL,GAEzC,EAAa,kBAAkB,CAAC,aAAe,2BAExC,MAAA,CADe,EAAM,kBACb,MAAA,CAAR,EAAQ,aAGf,SAAS,IAAI,CAAC,MAAM,CAAC,GAErB,WAAW,WACL,GACF,EAAa,MAAM,EAEvB,EAAG,IACL,CAlJA,EAAY,gBAAgB,CAAC,QAAS,SAAC,CAAvC,EACE,GAAI,AAAqB,OAArB,EAAE,MAAM,CAAC,OAAO,EAIpB,IAAM,EAAQ,EAAU,gBAAgB,CAAC,KAErC,CAAA,EAAE,MAAM,GAAK,GACf,CAAA,EAAU,CAAA,CADZ,EAIA,IAAM,EAAc,EAAI,GAAS,OAAO,CAAC,EAAE,MAAM,EAE3C,EAAS,EAAI,GAAO,IAAI,CAAC,SAAC,CAAA,CAAG,CAAnC,EACE,IAAM,EAAa,EAAE,QAAQ,CAAC,EAAY,CAAC,SAAS,CAC9C,EAAa,EAAE,QAAQ,CAAC,EAAY,CAAC,SAAS,QAEpD,AAAI,AAAC,MAAM,IAAe,AAAkB,MAAlB,CAAU,CAA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar filterBlock = document.querySelector(\"thead\");\nvar filters = filterBlock.querySelectorAll(\"th\");\nvar tableBody = document.querySelector(\"tbody\");\nvar lastFilterClicked;\nvar ascDone = false;\nfunction formatNum(str) {\n    return Number(str.replace(/\\D/g, \"\"));\n}\nfilterBlock.addEventListener(\"click\", function(e) {\n    var _tableBody;\n    if (e.target.tagName !== \"TH\") return;\n    var items = tableBody.querySelectorAll(\"tr\");\n    if (e.target !== lastFilterClicked) ascDone = false;\n    var filterIndex = _to_consumable_array(filters).indexOf(e.target);\n    var sorted = _to_consumable_array(items).sort(function(a, b) {\n        var sortFieldA = a.children[filterIndex].innerText;\n        var sortFieldB = b.children[filterIndex].innerText;\n        if (!isNaN(sortFieldA) || sortFieldA[0] === \"$\") return !ascDone ? formatNum(sortFieldA) - formatNum(sortFieldB) : formatNum(sortFieldB) - formatNum(sortFieldA);\n        return !ascDone ? sortFieldA.localeCompare(sortFieldB) : sortFieldB.localeCompare(sortFieldA);\n    });\n    (_tableBody = tableBody).append.apply(_tableBody, _to_consumable_array(sorted));\n    lastFilterClicked = e.target;\n    ascDone = !ascDone;\n});\ntableBody.addEventListener(\"click\", function(e) {\n    var clickedRow = e.target.closest(\"tr\");\n    if (!clickedRow || !tableBody.contains(clickedRow)) return;\n    var items = tableBody.querySelectorAll(\"tr\");\n    _to_consumable_array(items).forEach(function(row) {\n        return row.classList.remove(\"active\");\n    });\n    clickedRow.classList.add(\"active\");\n});\ndocument.body.insertAdjacentHTML(\"beforeend\", '\\n  <form action=\"#\" class=\"new-employee-form\">\\n    <label>\\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\\n    </label>\\n\\n    <label>\\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\\n    </label>\\n\\n    <label>\\n      Office:\\n      <select name=\"office\" data-qa=\"office\" required>\\n        <option value=\"Tokyo\">Tokyo</option>\\n        <option value=\"Singapore\">Singapore</option>\\n        <option value=\"London\">London</option>\\n        <option value=\"New York\">New York</option>\\n        <option value=\"Edinburgh\">Edinburgh</option>\\n        <option value=\"San Francisco\">San Francisco</option>\\n      </select>\\n    </label>\\n\\n    <label>\\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required>\\n    </label>\\n\\n    <label>\\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\\n    </label>\\n\\n    <button type=\"submit\">Save to table</button>\\n  </form>\\n');\nvar form = document.querySelector(\".new-employee-form\");\nvar MIN_NAME_LENGTH = 4;\nvar MIN_AGE = 18;\nvar MAX_AGE = 90;\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    var oldNotification = document.querySelector(\".notification\");\n    if (oldNotification) oldNotification.remove();\n    var data = new FormData(e.currentTarget);\n    var fields = Object.fromEntries(data.entries());\n    var message = \"\";\n    if (fields.name.length < MIN_NAME_LENGTH) message += \"\\n Name must not be less than 4 symbols\";\n    if (parseInt(fields.age) < MIN_AGE || parseInt(fields.age) > MAX_AGE) message += \"\\n The age must be between 18 and 90\";\n    if (message) {\n        pushNotification(\"Error\", message, \"error\");\n        return;\n    }\n    tableBody.insertAdjacentHTML(\"beforeend\", \"\\n    <tr>\\n      <td>\".concat(fields.name, \"</td>\\n      <td>\").concat(fields.position, \"</td>\\n      <td>\").concat(fields.office, \"</td>\\n      <td>\").concat(fields.age, \"</td>\\n      <td>\\n        $\").concat(Number(fields.salary).toLocaleString(\"en-US\"), \"\\n      </td>\\n    </tr>\\n  \"));\n    pushNotification(\"Success\", \"The data has successfully created\", \"success\");\n});\nfunction pushNotification(title, message, type) {\n    var notification = document.createElement(\"div\");\n    notification.dataset.qa = \"notification\";\n    notification.className = \"notification \".concat(type);\n    notification.insertAdjacentHTML(\"afterbegin\", '\\n    <h2 class=\"title\">'.concat(title, \"</h2>\\n    <p>\").concat(message, \"</p>\\n  \"));\n    document.body.append(notification);\n    setTimeout(function() {\n        if (notification) notification.remove();\n    }, 9000);\n}\ntableBody.addEventListener(\"dblclick\", function(e) {\n    if (e.target.tagName !== \"TD\") return;\n    var oldtext = e.target.innerText;\n    var input = document.createElement(\"input\");\n    var _e_target_parentElement_children = _sliced_to_array(e.target.parentElement.children, 5), age = _e_target_parentElement_children[3], salary = _e_target_parentElement_children[4];\n    input.className = \"cell-input\";\n    input.value = oldtext;\n    switch(e.target){\n        case age:\n            input.setAttribute(\"type\", \"number\");\n            break;\n        case salary:\n            input.setAttribute(\"type\", \"number\");\n            input.value = Number(oldtext.replace(/\\D/g, \"\"));\n            break;\n        default:\n            break;\n    }\n    e.target.firstChild.replaceWith(input);\n    input.focus();\n    var handleCellInput = function() {\n        e.target.innerText = input.value.trim() === \"\" ? e.target.innerText = oldtext : e.target.innerText = input.value;\n        if (e.target === e.target.parentElement.children[4]) e.target.innerText = \"$\".concat(Number(input.value).toLocaleString(\"en-US\"));\n    };\n    input.addEventListener(\"blur\", function() {\n        handleCellInput();\n    });\n    input.addEventListener(\"keypress\", function(f) {\n        if (f.key === \"Enter\") handleCellInput();\n    });\n});\n\n//# sourceMappingURL=index.e86fa46f.js.map\n","'use strict';\n\nconst filterBlock = document.querySelector('thead');\nconst filters = filterBlock.querySelectorAll('th');\nconst tableBody = document.querySelector('tbody');\n\nlet lastFilterClicked;\nlet ascDone = false;\n\nfunction formatNum(str) {\n  return Number(str.replace(/\\D/g, ''));\n}\n\nfilterBlock.addEventListener('click', (e) => {\n  if (e.target.tagName !== 'TH') {\n    return;\n  }\n\n  const items = tableBody.querySelectorAll('tr');\n\n  if (e.target !== lastFilterClicked) {\n    ascDone = false;\n  };\n\n  const filterIndex = [...filters].indexOf(e.target);\n\n  const sorted = [...items].sort((a, b) => {\n    const sortFieldA = a.children[filterIndex].innerText;\n    const sortFieldB = b.children[filterIndex].innerText;\n\n    if (!isNaN(sortFieldA) || sortFieldA[0] === '$') {\n      return !ascDone\n        ? formatNum(sortFieldA) - formatNum(sortFieldB)\n        : formatNum(sortFieldB) - formatNum(sortFieldA);\n    }\n\n    return !ascDone\n      ? sortFieldA.localeCompare(sortFieldB)\n      : sortFieldB.localeCompare(sortFieldA);\n  });\n\n  tableBody.append(...sorted);\n  lastFilterClicked = e.target;\n  ascDone = !ascDone;\n});\n\ntableBody.addEventListener('click', (e) => {\n  const clickedRow = e.target.closest('tr');\n\n  if (!clickedRow || !tableBody.contains(clickedRow)) {\n    return;\n  }\n\n  const items = tableBody.querySelectorAll('tr');\n\n  [...items].forEach(row => row.classList.remove('active'));\n  clickedRow.classList.add('active');\n});\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form action=\"#\" class=\"new-employee-form\">\n    <label>\n      Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n\n    <label>\n      Position: <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n\n    <label>\n      Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n\n    <label>\n      Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n\n    <label>\n      Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('.new-employee-form');\nconst MIN_NAME_LENGTH = 4;\nconst MIN_AGE = 18;\nconst MAX_AGE = 90;\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const oldNotification = document.querySelector('.notification');\n\n  if (oldNotification) {\n    oldNotification.remove();\n  }\n\n  const data = new FormData(e.currentTarget);\n  const fields = Object.fromEntries(data.entries());\n\n  let message = '';\n\n  if (fields.name.length < MIN_NAME_LENGTH) {\n    message += '\\n Name must not be less than 4 symbols';\n  };\n\n  if (parseInt(fields.age) < MIN_AGE || parseInt(fields.age) > MAX_AGE) {\n    message += '\\n The age must be between 18 and 90';\n  };\n\n  if (message) {\n    pushNotification('Error', message, 'error');\n\n    return;\n  }\n\n  tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${fields.name}</td>\n      <td>${fields.position}</td>\n      <td>${fields.office}</td>\n      <td>${fields.age}</td>\n      <td>\n        $${Number(fields.salary).toLocaleString('en-US')}\n      </td>\n    </tr>\n  `);\n\n  pushNotification('Success', 'The data has successfully created', 'success');\n});\n\nfunction pushNotification(title, message, type) {\n  const notification = document.createElement('div');\n\n  notification.dataset.qa = 'notification';\n  notification.className = `notification ${type}`;\n\n  notification.insertAdjacentHTML('afterbegin', `\n    <h2 class=\"title\">${title}</h2>\n    <p>${message}</p>\n  `);\n\n  document.body.append(notification);\n\n  setTimeout(() => {\n    if (notification) {\n      notification.remove();\n    }\n  }, 9000);\n}\n\ntableBody.addEventListener('dblclick', (e) => {\n  if (e.target.tagName !== 'TD') {\n    return;\n  }\n\n  const oldtext = e.target.innerText;\n  const input = document.createElement('input');\n  const [,,, age, salary] = e.target.parentElement.children;\n\n  input.className = 'cell-input';\n  input.value = oldtext;\n\n  switch (e.target) {\n    case age:\n      input.setAttribute('type', 'number');\n      break;\n    case salary:\n      input.setAttribute('type', 'number');\n      input.value = Number(oldtext.replace(/\\D/g, ''));\n      break;\n    default:\n      break;\n  }\n\n  e.target.firstChild.replaceWith(input);\n  input.focus();\n\n  const handleCellInput = () => {\n    e.target.innerText = input.value.trim() === ''\n      ? e.target.innerText = oldtext\n      : e.target.innerText = input.value;\n\n    if (e.target === e.target.parentElement.children[4]) {\n      e.target.innerText = `$${Number(input.value)\n        .toLocaleString('en-US')}`;\n    }\n  };\n\n  input.addEventListener('blur', () => {\n    handleCellInput();\n  });\n\n  input.addEventListener('keypress', (f) => {\n    if (f.key === 'Enter') {\n      handleCellInput();\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","lastFilterClicked","filterBlock","document","querySelector","filters","querySelectorAll","tableBody","ascDone","formatNum","str","Number","replace","pushNotification","title","message","type","notification","createElement","dataset","qa","className","concat","insertAdjacentHTML","body","append","setTimeout","remove","addEventListener","e","target","tagName","items","filterIndex","indexOf","sorted","sort","a","b","sortFieldA","children","innerText","sortFieldB","isNaN","localeCompare","apply","clickedRow","closest","contains","forEach","row","classList","add","form","preventDefault","oldNotification","fields","fromEntries","data","FormData","currentTarget","entries","parseInt","age","position","office","salary","toLocaleString","oldtext","input","_e_target_parentElement_children","_array_with_holes","parentElement","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","next","done","push","value","err","_non_iterable_rest","setAttribute","firstChild","replaceWith","focus","handleCellInput","trim","f","key"],"version":3,"file":"index.e86fa46f.js.map"}